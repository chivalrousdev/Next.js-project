@use "@scss/common" as *;

.modalContainer {
  transition: opacity var(--modal-trans-time) linear;
  min-height: 100vh;
  background-color: transparent; // use transparent to avoid FOUC on initial load
  opacity: 0;
  will-change: background-color;
  // backdrop-filter: blur(8px);
  // -webkit-backdrop-filter: blur(8px);

  &:global(.modal-container--appearActive),
  &:global(.modal-container--appearDone),
  &:global(.modal-container--enterActive),
  &:global(.modal-container--enterDone) {
    background: white;
    opacity: 1;
  }

  &:global(.modal-container--exitActive),
  &:global(.modal-container--exitDone) {
    background: white;
    opacity: 0;
  }
}

:global(.isDark) {
  &:local() {
    .modalContainer {
      &:global(.modal-container--appearActive),
      &:global(.modal-container--appearDone),
      &:global(.modal-container--enterActive),
      &:global(.modal-container--enterDone) {
        background: var(--color-black);
      }

      &:global(.modal-container--exitActive),
      &:global(.modal-container--exitDone) {
        background: var(--color-black);
      }
  }
  }
}
